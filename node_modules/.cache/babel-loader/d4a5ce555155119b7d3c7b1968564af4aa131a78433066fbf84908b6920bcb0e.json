{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Desktop\\\\Blog test application\\\\client\\\\src\\\\pages\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modules = {\n  toolbar: [[{\n    'header': [1, 2, false]\n  }], ['bold', 'italic', 'underline', 'strike', 'blockquote'], [{\n    'list': 'ordered'\n  }, {\n    'list': 'bullet'\n  }, {\n    'indent': '-1'\n  }, {\n    'indent': '+1'\n  }], ['link', 'image'], ['clean']]\n};\nconst formats = ['header', 'bold', 'italic', 'underline', 'strike', 'blockquote', 'list', 'bullet', 'indent', 'link', 'image'];\nexport default function CreatePost() {\n  _s();\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [content, setContent] = useState('');\n  const [file, setFile] = useState('');\n  async function createNewPost(ev) {\n    ev.preventDefault();\n    const data = new FormData();\n    data.set('title', title);\n    data.set('summary', summary);\n    data.set('content', content);\n    data.set('file', file);\n    const response = await fetch('http://localhost:4000/post', {\n      method: 'POST',\n      body: data\n    });\n    console.log(await response.json());\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: createNewPost,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Title\",\n      value: title,\n      onChange: ev => setTitle(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Summary\",\n      value: summary,\n      onChange: ev => setSummary(ev.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      value: file,\n      onChange: ev => setFile(ev.target.files[0])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n      value: content,\n      onChange: newValue => setContent(newValue),\n      modules: modules,\n      formats: formats\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: '5px'\n      },\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(CreatePost, \"f1yiyoZGv7ZpUZ6uaFUnbOvgwk8=\");\n_c = CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["ReactQuill","useState","jsxDEV","_jsxDEV","modules","toolbar","formats","CreatePost","_s","title","setTitle","summary","setSummary","content","setContent","file","setFile","createNewPost","ev","preventDefault","data","FormData","set","response","fetch","method","body","console","log","json","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","files","newValue","style","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Desktop/Blog test application/client/src/pages/CreatePost.js"],"sourcesContent":["import ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport { useState } from \"react\";\r\n\r\nconst modules = {\r\n  toolbar: [\r\n    [{ 'header': [1, 2, false] }],\r\n    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\r\n    [{ 'list': 'ordered' }, { 'list': 'bullet' }, { 'indent': '-1' }, { 'indent': '+1' }],\r\n    ['link', 'image'],\r\n    ['clean']\r\n  ],\r\n};\r\n\r\nconst formats = [\r\n  'header',\r\n  'bold', 'italic', 'underline', 'strike', 'blockquote',\r\n  'list', 'bullet', 'indent',\r\n  'link', 'image'\r\n];\r\n\r\nexport default function CreatePost() {\r\n  const [title, setTitle] = useState('');\r\n  const [summary, setSummary] = useState('');\r\n  const [content, setContent] = useState('');\r\n  const [file, setFile] = useState('');\r\n\r\n  async function createNewPost(ev) {\r\n    ev.preventDefault();\r\n\r\n    const data = new FormData();\r\n    data.set('title', title);\r\n    data.set('summary', summary);\r\n    data.set('content', content);\r\n    data.set('file', file);\r\n\r\n    const response = await fetch('http://localhost:4000/post', {\r\n      method: 'POST',\r\n      body: data,\r\n    });\r\n    \r\n    console.log(await response.json());\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={createNewPost}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        value={title}\r\n        onChange={ev => setTitle(ev.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Summary\"\r\n        value={summary}\r\n        onChange={ev => setSummary(ev.target.value)}\r\n      />\r\n      <input\r\n        type=\"file\"\r\n        value={file}\r\n        onChange={ev => setFile(ev.target.files[0])}\r\n      />\r\n\r\n      <ReactQuill\r\n        value={content}\r\n        onChange={newValue => setContent(newValue)}\r\n        modules={modules}\r\n        formats={formats}\r\n      />\r\n      <button style={{ marginTop: '5px' }}>Create Post</button>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}